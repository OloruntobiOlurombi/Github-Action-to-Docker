name: Build Docker Image 

on: push  
  #on: workflow_dispatch

jobs:
  #expressions:
  #  runs-on: ubuntu-latest 
  #  steps: 
  #    - name: Get Expressions 
  #      run: github.com  
  build-to-Dhub:
    runs-on: ubuntu-latest 
    steps:

      - name: Code Checkout 
        uses: actions/checkout@v4

      - name: Docker Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build Image 
        run: |
          docker build -t node-docker-appimg:v3 .
          docker tag node-docker-appimg:v3 oloruntobi/node-docker-appimg:v3
          docker push oloruntobi/node-docker-appimg:v3

  build-to-AWSECR:
    needs: build-to-Dhub
    runs-on: ubuntu-latest 
    steps:

      - name: Code Checkout
        uses: actions/checkout@v4 
        
      - name: Login into AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY}}
          aws-secret-access-key: ${{ secrets.SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.REGION}}
  
  build-and-push-ecr:
    needs: build-to-AWSECR
    runs-on: ubuntu-latest
    steps:
    
      - name: ECR Login to Public ECR
        uses: docker/login-action@v3
        with:
          registry: public.ecr.aws
          username: ${{ secrets.ACCESS_KEY }}
          password: ${{ secrets.SECRET_ACCESS_KEY }}
        env:    
          aws-region: ${{ secrets.REGION}}   
          # - run: aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/n9x0f3u3

      - name: Build Image
        run: |
          docker build -t react_pub .
          docker tag react_pub:latest public.ecr.aws/n9x0f3u3/react_pub:v1 
          docker push public.ecr.aws/n9x0f3u3/react_pub:v1      
        
